<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>f2py on #!bin/namami</title>
    <link>https://namamishanker.github.io/tags/f2py/</link>
    <description>Recent content in f2py on #!bin/namami</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 12 Sep 2022 19:22:20 +0530</lastBuildDate><atom:link href="https://namamishanker.github.io/tags/f2py/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GSoC&#39;22 closing remarks and Work Report</title>
      <link>https://namamishanker.github.io/posts/gsoc-closing-remarks/</link>
      <pubDate>Mon, 12 Sep 2022 19:22:20 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/gsoc-closing-remarks/</guid>
      <description>GSoC&#39;22 Work Submission and closing remarks  Link to heading   Closing remarks  Link to heading   Participating in Google Summer of Code 2022 with NumPy was more than just contributing to a summer coding internship for me. I remember walking around my college hostel along with my friend during the first year of my engineering in 2019 discussing what do we want to achieve over the course of our undergraduate education.</description>
    </item>
    
    <item>
      <title>Week 8-9: Meson backend for F2PY</title>
      <link>https://namamishanker.github.io/posts/f2py_meson_backend/</link>
      <pubDate>Sat, 20 Aug 2022 13:26:08 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py_meson_backend/</guid>
      <description>Week 8-9: Meson build system for F2PY  Link to heading   F2PY and its current status  Link to heading   I have talked a lot about F2PY during past 2 months as my Google Summer of Code progressed. Simply explained, F2PY is a command line tool that provides easy connection between Fortran languages and Python. It facilitates creating Python C/API extension modules from Fortran files that can be called and imported in Python.</description>
    </item>
    
    <item>
      <title>Week 6: Continuing working on the frontend argparse</title>
      <link>https://namamishanker.github.io/posts/f2py_pr_review/</link>
      <pubDate>Wed, 27 Jul 2022 21:34:26 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py_pr_review/</guid>
      <description>Week 6: Continuing working on the frontend argparse  Link to heading   What did I do this week?  Link to heading   I implemented some changes suggested by reviewers on my draft PR.
Firstly, I added typing support to the functions I have made. Therefore, currently: f2pyarg.py, service.py, utils.py have typing support. Initially I had added typing library for type annotations. But Bas Van Beek suggested to replace them with buitlins type annotations.</description>
    </item>
    
    <item>
      <title>Week 5: Finishing with F2PY&#39;s new frontend</title>
      <link>https://namamishanker.github.io/posts/finishing_f2py_frontend/</link>
      <pubDate>Thu, 21 Jul 2022 21:34:26 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/finishing_f2py_frontend/</guid>
      <description>Week 5: Finishing with F2PY&amp;rsquo;s new frontend  Link to heading   This will a weekly check-in and status update regarding my work on F2PY. The reason being that I have implemented or study something new that I feel worth sharing in detail. I continued working on F2PY&amp;rsquo;s frontend, mostly debugging and improving some facets. Here are the changes:-
What did I do this week?  Link to heading   I am so happy to say that I have completed a working and functioning argparse frontend for F2PY.</description>
    </item>
    
    <item>
      <title>Week 3 and 4: The new argparse F2PY</title>
      <link>https://namamishanker.github.io/posts/argparse-f2py/</link>
      <pubDate>Thu, 14 Jul 2022 18:38:33 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/argparse-f2py/</guid>
      <description>Week 3 and 4: Argparse F2PY  Link to heading   The much awaited F2PY with an argparse frontend is here. It is in review as I write this blog but if you are feeling adventurous and can&amp;rsquo;t wait use it, you can clone my fork of NumPy and checkout the f2py_front branch. Installation of this experimental NumPy version are detailed in these instructions.(Of course I am joking, no one who gets excited over F2PY builds NumPy)</description>
    </item>
    
    <item>
      <title>Week 2: Moving F2PY to Meson build system</title>
      <link>https://namamishanker.github.io/posts/f2py-meson-backend/</link>
      <pubDate>Tue, 28 Jun 2022 15:36:42 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py-meson-backend/</guid>
      <description>Meson as a backend build system for F2PY  Link to heading   Last week we discussed F2PY&amp;rsquo;s frontend and how it is undergoing re-implementation using the argparse python library. This week we will look at the backend build system of F2PY, and how meson will be used to build the extension module.
What is the use of a build system?  Link to heading   Simply explained, build system exist to automate compilation and linking of big programs.</description>
    </item>
    
    <item>
      <title>Week 1: F2PY Frontend</title>
      <link>https://namamishanker.github.io/posts/f2py_frontend/</link>
      <pubDate>Wed, 15 Jun 2022 21:34:26 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py_frontend/</guid>
      <description>F2PY frontend: The Old and the New  Link to heading   We will look at the current F2PY frontend, and understand the ongoing re-implementation of it using the argparse python library.
Introduction  Link to heading   F2PY is a command line tool that provides easy connection between Fortran languages and Python. It facilitates creating Python C/API extension modules that can be called and imported in Python. It gives you the speed of Fortran and the flexibility of Python.</description>
    </item>
    
    <item>
      <title>GSoC&#39;22 project introduction and tentative plan</title>
      <link>https://namamishanker.github.io/posts/gsoc_project_intro/</link>
      <pubDate>Mon, 30 May 2022 00:56:39 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/gsoc_project_intro/</guid>
      <description>I applied for Google Summer of Code 2022 to work with NumPy&amp;rsquo;s F2PY maintainence team and improve F2PY under Python Software Foundation. Breifly said, F2PY is a CLI that provides an easy connection between Python and Fortran languagues. I have previously dicussed F2PY on my website on the topics Scipy, Fortran and F2PY and F2PY tests.
During my time of application, F2PY&amp;rsquo;s frontend was a handwritten command line parser with handwritten interfacing.</description>
    </item>
    
    <item>
      <title>F2PY Tests</title>
      <link>https://namamishanker.github.io/posts/f2py_tests/</link>
      <pubDate>Sun, 03 Apr 2022 10:22:28 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py_tests/</guid>
      <description>I have talked previously about building fast libraries for Python using Fortran. The key software that facilitates easy integration of Fortran code into Python is F2PY. The user can write fast Fortran code with F2PY specific comments and compile it using F2PY to produce a high-speed ready-to-use Python library.
F2PY  Link to heading   F2PY is an open-source utilty tool that provides an easy connection between Python and Fortran languages.</description>
    </item>
    
    <item>
      <title>Building fast libraries: Numpy and SciPy</title>
      <link>https://namamishanker.github.io/posts/scipy_fortran_f2py/</link>
      <pubDate>Thu, 24 Mar 2022 14:01:12 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/scipy_fortran_f2py/</guid>
      <description>Numpy and Scipy are industry leading Python libraries for fast numerical computation, providing speed and accuracy matching MATLAB and highly optimized low-level numerical computation libraries. In this blog I&amp;rsquo;ll explain to you how they work and how can you create your own superfast Python library.
SciPy  Link to heading   The name SciPy is very well-known in the scientific computation industry. Every engineer, researcher, teacher or student who has used Python has used Scipy at least once or more in their career.</description>
    </item>
    
  </channel>
</rss>
