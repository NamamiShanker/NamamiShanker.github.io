<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on #!bin/namami</title>
    <link>https://namamishanker.github.io/posts/</link>
    <description>Recent content in Posts on #!bin/namami</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 30 May 2022 00:56:39 +0530</lastBuildDate>
    
	<atom:link href="https://namamishanker.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>GSoC&#39;22 project introduction and tentative plan</title>
      <link>https://namamishanker.github.io/posts/gsoc_project_intro/</link>
      <pubDate>Mon, 30 May 2022 00:56:39 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/gsoc_project_intro/</guid>
      <description>I applied for Google Summer of Code 2022 to work with NumPy&amp;rsquo;s F2PY maintainence team and improve F2PY under Python Software Foundation. Breifly said, F2PY is a CLI that provides an easy connection between Python and Fortran languagues. I have previously dicussed F2PY on my website on the topics Scipy, Fortran and F2PY and F2PY tests.
During my time of application, F2PY&amp;rsquo;s frontend was a handwritten command line parser with handwritten interfacing.</description>
    </item>
    
    <item>
      <title>F2PY Tests</title>
      <link>https://namamishanker.github.io/posts/f2py_tests/</link>
      <pubDate>Sun, 03 Apr 2022 10:22:28 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py_tests/</guid>
      <description>I have talked previously about building fast libraries for Python using Fortran. The key software that facilitates easy integration of Fortran code into Python is F2PY. The user can write fast Fortran code with F2PY specific comments and compile it using F2PY to produce a high-speed ready-to-use Python library.
F2PY F2PY is an open-source utilty tool that provides an easy connection between Python and Fortran languages. It was written in the late 90s by Dr.</description>
    </item>
    
    <item>
      <title>Building fast libraries: Numpy and SciPy</title>
      <link>https://namamishanker.github.io/posts/scipy_fortran_f2py/</link>
      <pubDate>Thu, 24 Mar 2022 14:01:12 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/scipy_fortran_f2py/</guid>
      <description>Numpy and Scipy are industry leading Python libraries for fast numerical computation, providing speed and accuracy matching MATLAB and highly optimized low-level numerical computation libraries. In this blog I&amp;rsquo;ll explain to you how they work and how can you create your own superfast Python library.
SciPy The name SciPy is very well-known in the scientific computation industry. Every engineer, researcher, teacher or student who has used Python has used Scipy at least once or more in their career.</description>
    </item>
    
  </channel>
</rss>