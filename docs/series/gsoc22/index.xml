<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GSoC&#39;22 on #!bin/namami</title>
    <link>https://namamishanker.github.io/series/gsoc22/</link>
    <description>Recent content in GSoC&#39;22 on #!bin/namami</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 28 Jun 2022 15:36:42 +0530</lastBuildDate>
    
	<atom:link href="https://namamishanker.github.io/series/gsoc22/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Week 2: Moving F2PY to Meson build system</title>
      <link>https://namamishanker.github.io/posts/f2py-meson-backend/</link>
      <pubDate>Tue, 28 Jun 2022 15:36:42 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py-meson-backend/</guid>
      <description>Meson as a backend build system for F2PY Last week we discussed F2PY&amp;rsquo;s frontend and how it is undergoing re-implementation using the argparse python library. This week we will look at the backend build system of F2PY, and how meson will be used to build the extension module.
What is the use of a build system? Simply explained, build system exist to automate compilation and linking of big programs. A program&amp;rsquo;s source code might consist of several hundred C++ files, some C and a few Fortran files.</description>
    </item>
    
    <item>
      <title>Week 1: F2PY Frontend</title>
      <link>https://namamishanker.github.io/posts/f2py_frontend/</link>
      <pubDate>Wed, 15 Jun 2022 21:34:26 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/f2py_frontend/</guid>
      <description>F2PY frontend: The Old and the New We will look at the current F2PY frontend, and understand the ongoing re-implementation of it using the argparse python library.
Introduction F2PY is a command line tool that provides easy connection between Fortran languages and Python. It facilitates creating Python C/API extension modules that can be called and imported in Python. It gives you the speed of Fortran and the flexibility of Python.</description>
    </item>
    
    <item>
      <title>GSoC&#39;22 project introduction and tentative plan</title>
      <link>https://namamishanker.github.io/posts/gsoc_project_intro/</link>
      <pubDate>Mon, 30 May 2022 00:56:39 +0530</pubDate>
      
      <guid>https://namamishanker.github.io/posts/gsoc_project_intro/</guid>
      <description>I applied for Google Summer of Code 2022 to work with NumPy&amp;rsquo;s F2PY maintainence team and improve F2PY under Python Software Foundation. Breifly said, F2PY is a CLI that provides an easy connection between Python and Fortran languagues. I have previously dicussed F2PY on my website on the topics Scipy, Fortran and F2PY and F2PY tests.
During my time of application, F2PY&amp;rsquo;s frontend was a handwritten command line parser with handwritten interfacing.</description>
    </item>
    
  </channel>
</rss>